# CONFIG.PY - VERS√ÉO 2.1.0 CORRIGIDA
# ==============================================================================
# CONFIGURA√á√ïES GERAIS DO BOT
# ==============================================================================

# -- Ativo e Conex√£o --
SYMBOL = "BTCUSDT"
STREAM_URL = f"wss://fstream.binance.com/ws/{SYMBOL.lower()}@aggTrade"

# === Credenciais de IA (DashScope/Qwen) ===
DASHSCOPE_API_KEY = "sk-6f40dca1f07b492d8ee6fa6b724dd4dc"
AI_KEYS = {
    "dashscope": DASHSCOPE_API_KEY,
}

# (Opcional) Se algum dia usar OpenAI, pode definir aqui tamb√©m:
OPENAI_API_KEY = None

# -- Janela de An√°lise (Candle) --
WINDOW_SIZE_MINUTES = 1  # Tamanho da janela de tempo para agrupar trades (em minutos)

# ==============================================================================
# PAR√ÇMETROS DE AN√ÅLISE DE FLUXO (data_handler.py)
# ==============================================================================

# -- Exaust√£o --
# Um pico de volume √© considerado exaust√£o se for X vezes maior que a m√©dia hist√≥rica.
VOL_FACTOR_EXH = 2.0
HISTORY_SIZE = 50  # N√∫mero de janelas anteriores para calcular a m√©dia de volume/delta.

# -- Absor√ß√£o --
# O threshold de delta para absor√ß√£o ser√° calculado dinamicamente.
# Formula: m√©dia(delta) + (fator * desvio_padr√£o(delta))
DELTA_STD_DEV_FACTOR = 2.5

# -- M√©dia M√≥vel de Contexto (SMA) --
# Usada para dar um contexto simples de tend√™ncia (pre√ßo acima/abaixo da m√©dia).
CONTEXT_SMA_PERIOD = 10

# ==============================================================================
# PAR√ÇMETROS DO LIVRO DE OFERTAS (orderbook_analyzer.py) - CORRIGIDOS v2.1
# ==============================================================================

# -- Fluxo de Liquidez --
# Alerta se a liquidez no topo do book mudar mais que X% entre as checagens.
LIQUIDITY_FLOW_ALERT_PERCENTAGE = 0.4  # 40%

# üîß CORRIGIDO: Aumentado para valor mais realista para BTCUSDT
MIN_OB_ABS_CHANGE_USD = 750_000  # ‚úÖ AUMENTADO de 250_000 para 750_000

# -- Paredes de Liquidez (Walls) --
# Uma ordem √© considerada uma "parede" se for X desvios padr√£o maior que a m√©dia das ordens.
WALL_STD_DEV_FACTOR = 3.0

# ---- CR√çTICO: limiares para desequil√≠brio extremo no livro ----
# Promove alerta "CRITICAL" quando QUALQUER destes cen√°rios ocorrer:
# 1) |imbalance| >= 0.95 e (ratio_dom >= 20x OU lado dominante >= 2M USD)
# 2) ratio_dom >= 50x (independente do imbalance) ‚Äî prote√ß√£o para assimetrias extremas
ORDERBOOK_CRITICAL_IMBALANCE = 0.95
ORDERBOOK_MIN_DOMINANT_USD = 2_000_000.0
ORDERBOOK_MIN_RATIO_DOM = 20.0

# ==============================================================================
# üîß CORRE√á√ïES CR√çTICAS PARA ORDERBOOK v2.1
# ==============================================================================

# ===== TIMEOUTS E RETRIES =====
ORDERBOOK_REQUEST_TIMEOUT = 10.0        # ‚úÖ REDUZIDO: 10 segundos (era 15.0)
ORDERBOOK_RETRY_DELAY = 2.0            # ‚úÖ REDUZIDO: 2 segundos (era 3.0)
ORDERBOOK_MAX_RETRIES = 3              # ‚úÖ REDUZIDO: 3 tentativas (era 5)

# ===== RATE LIMITING =====
ORDERBOOK_MAX_REQUESTS_PER_MIN = 10    # ‚úÖ AUMENTADO: 10 req/min (era 5) - Binance suporta bem
ORDERBOOK_RATE_LIMIT_BUFFER = 1.0      # ‚úÖ REDUZIDO: 1 segundo de buffer (era 2.0)

# ===== CACHE - DRASTICAMENTE REDUZIDO =====
ORDERBOOK_CACHE_TTL = 15.0             # ‚úÖ REDUZIDO: 15 segundos (era 30.0)
ORDERBOOK_MAX_STALE = 60.0             # ‚úÖ REDUZIDO: 1 minuto (era 5 MINUTOS!)

# ===== VALIDA√á√ÉO - MUITO MAIS RIGOROSA =====
ORDERBOOK_MIN_DEPTH_USD = 5_000.0      # ‚úÖ AUMENTADO: $5,000 m√≠nimo (era $500!)
ORDERBOOK_ALLOW_PARTIAL = False        # ‚úÖ DESATIVADO: Exige bid E ask v√°lidos (era True)
ORDERBOOK_MIN_LEVELS = 10              # ‚úÖ AUMENTADO: M√≠nimo 10 n√≠veis (era 3)

# ===== FALLBACK - MAIS CONSERVADOR =====
ORDERBOOK_USE_FALLBACK = True          # Mant√©m, mas com limites rigorosos
ORDERBOOK_FALLBACK_MAX_AGE = 120       # ‚úÖ REDUZIDO: 2 minutos (era 10 MINUTOS!)
ORDERBOOK_EMERGENCY_MODE = False       # ‚úÖ DESATIVADO: Sem emergency mode (era True)

# ===== üÜï VALIDA√á√ÉO DE TIMESTAMP (NOVOS PAR√ÇMETROS) =====
ORDERBOOK_MAX_AGE_MS = 30000           # ‚úÖ NOVO: Rejeita dados com mais de 30 segundos
ORDERBOOK_REQUIRE_TIMESTAMP = True     # ‚úÖ NOVO: Exige timestamp v√°lido sempre
ORDERBOOK_VALIDATE_SEQUENCE = True     # ‚úÖ NOVO: Valida sequ√™ncia de updates

# ===== WEBSOCKET =====
WS_PING_INTERVAL = 20                  # ‚úÖ REDUZIDO: 20 segundos (era 30)
WS_PING_TIMEOUT = 10                   # Timeout de 10 segundos
WS_RECONNECT_DELAY = 3.0               # Delay de 3 segundos entre reconex√µes

# ==============================================================================
# PAR√ÇMETROS DO FLUXO CONT√çNUO (flow_analyzer.py) - CORRIGIDOS v2.1
# ==============================================================================

# -- CVD & Whale Flow --
# ‚úÖ CORRIGIDO: Alinhado com flow_analyzer.py v2.3.0
CVD_RESET_INTERVAL_HOURS = 4  # ‚úÖ REDUZIDO: 4 horas (era 24 HORAS!)

# Sensibilidade de trades "whale" (em BTC) para o c√°lculo de Whale Flow (n√£o afeta buckets)
WHALE_TRADE_THRESHOLD = 5.0

# -- Buckets de tamanho de ordem (retail/mid/whale) usados na segmenta√ß√£o por players
ORDER_SIZE_BUCKETS = {
    "retail": (0, 0.5),      # at√© 0.5 BTC
    "mid": (0.5, 2.0),       # de 0.5 a 2 BTC
    "whale": (2.0, 9999.0)   # acima de 2 BTC
}

# -- Bursts (microtempo)
# Volume agregado (BTC) dentro de 200ms para caracterizar uma rajada (burst).
# Ajuste conforme sua sensibilidade: 3.0‚Äì8.0 BTC s√£o comuns para BTCUSDT em aggTrades.
BURST_VOLUME_THRESHOLD = 5.0

# ===== üÜï CONFIGURA√á√ïES PARA SEPARA√á√ÉO JANELA/ACUMULADO (NOVOS PAR√ÇMETROS) =====
FLOW_PREFER_WINDOW_METRICS = True      # ‚úÖ NOVO: Preferir m√©tricas de janela sobre acumulado
FLOW_LOG_WINDOW_PERIOD = True          # ‚úÖ NOVO: Logar claramente qual per√≠odo est√° sendo usado
FLOW_VALIDATE_CONSISTENCY = True       # ‚úÖ NOVO: Validar consist√™ncia entre janelas e acumulado

# ==============================================================================
# PAR√ÇMETROS DO COLETOR DE CONTEXTO (context_collector.py)
# ==============================================================================

# -- An√°lise Multi-Timeframe (MTF) --
CONTEXT_TIMEFRAMES = ['15m', '1h', '4h']
CONTEXT_EMA_PERIOD = 21
CONTEXT_ATR_PERIOD = 14

# -- An√°lise Intermarket Cripto --
INTERMARKET_SYMBOLS = ["ETHUSDT"]  # Outros criptoativos para correla√ß√£o r√°pida

# -- An√°lise Intermarket Global (via yfinance) --
EXTERNAL_MARKETS = {
    "GOLD": "GC=F",     # Ouro (Future)
    "SP500": "^GSPC",   # S&P 500
    "NASDAQ": "^IXIC",  # Nasdaq
    "US10Y": "^TNX",    # Rend. Treasury 10 anos
    "OIL": "CL=F"       # Petr√≥leo WTI
}

# -- An√°lise de Derivativos --
DERIVATIVES_SYMBOLS = [SYMBOL]  # Usa o mesmo SYMBOL definido acima

# -- Heatmap de Liquida√ß√µes --
LIQUIDATION_MAP_DEPTH = 100  # Agrupamento em US$ (100 = buckets de $100)

# -- Volume Profile Hist√≥rico --
VP_NUM_DAYS_HISTORY = 1
VP_VALUE_AREA_PERCENT = 0.70
VP_ADVANCED = True  # se True, calcula HVN/LVN/multi-timeframes/single prints

# -- Intervalo de atualiza√ß√£o --
# ‚úÖ CORRETO: 1 minuto para dados recentes
CONTEXT_UPDATE_INTERVAL_SECONDS = 60  # 1 minuto

# ==============================================================================
# PAR√ÇMETROS DE MACHINE LEARNING / ESTAT√çSTICA
# ==============================================================================

# Conjunto de janelas para olhar resultados ap√≥s setups (em minutos)
ML_LOOKBACK_WINDOWS = [5, 15, 60]
# N√∫mero m√≠nimo de exemplos necess√°rios
ML_MIN_SAMPLE_SIZE = 100
# De quanto em quanto atualizar estat√≠sticas
ML_UPDATE_INTERVAL = 60 * 10  # 10 minutos

# ==============================================================================
# PAR√ÇMETROS DE SENTIMENTO / ON-CHAIN
# ==============================================================================

ENABLE_ONCHAIN = True
ONCHAIN_PROVIDERS = ["glassnode", "cryptoquant"]  # adapt√°vel depois
STABLECOIN_FLOW_TRACKING = True

# ==============================================================================
# PAR√ÇMETROS DE QUALIDADE DE SINAL (IA e Eventos)
# ==============================================================================

# Gating para n√£o marcar sinal em janelas "magras" ou irrelevantes
MIN_SIGNAL_VOLUME_BTC = 1.0    # Volume m√≠nimo na janela para validar sinal
MIN_SIGNAL_TPS = 2.0           # Trades por segundo m√≠nimo para validar sinal
MIN_ABS_DELTA_BTC = 0.5        # Piso de |delta| para validar absor√ß√£o (al√©m do delta_threshold din√¢mico)
MIN_REVERSAL_RATIO = 0.2       # Revers√£o m√≠nima relativa ao |delta| para caracterizar absor√ß√£o (20%)
INDEX_ATR_FLOOR_PCT = 0.001    # Piso de ATR como % do pre√ßo para c√°lculo robusto do √≠ndice de absor√ß√£o

# ==============================================================================
# PAR√ÇMETROS DE VALIDA√á√ÉO E SEGURAN√áA - CORRIGIDOS v2.1
# ==============================================================================

# -- Limite de volume para trades considerados v√°lidos --
MAX_TRADE_VOLUME_BTC = 100.0   # Volume m√°ximo considerado v√°lido (evita outliers)
MIN_TRADE_VOLUME_BTC = 0.01    # ‚úÖ AUMENTADO: 0.01 BTC (~$1,100) (era 0.001)

# -- Limite de pre√ßo para trades considerados v√°lidos --
MAX_PRICE_DEVIATION_PCT = 0.01  # ‚úÖ REDUZIDO: 1% de desvio m√°ximo (era 5%!)

# -- Intervalo de tempo entre atualiza√ß√µes de seguran√ßa --
HEALTH_CHECK_INTERVAL = 30      # Segundos entre verifica√ß√µes de sa√∫de do sistema

# -- Par√¢metros de fallback para dados ausentes --
FALLBACK_DELTA_THRESHOLD = 1.0  # Threshold de delta para fallback quando dados s√£o inconsistentes
FALLBACK_VOLUME_THRESHOLD = 5.0 # Volume m√≠nimo para fallback

# -- Par√¢metros de toler√¢ncia para dados incompletos --
MAX_MISSING_FIELDS_RATIO = 0.1  # M√°ximo de 10% de campos ausentes permitidos
TRADE_VALIDATION_WINDOW = 60    # Janela de tempo para valida√ß√£o de trades (em segundos)

# -- Configura√ß√µes de log e monitoramento --
LOG_LEVEL = "INFO"              # N√≠vel de log (DEBUG, INFO, WARNING, ERROR)
LOG_TO_FILE = True              # Se deve logar para arquivo
LOG_FILE_MAX_SIZE = 10 * 1024 * 1024  # 10MB
LOG_FILE_BACKUP_COUNT = 5       # N√∫mero de arquivos de backup

# Log de campos ausentes: defina o passo de amostragem ou None para desativar
MISSING_FIELD_LOG_STEP = None   # None = desativa logs de campos ausentes

# Tamanho m√≠nimo de caracteres para considerar a an√°lise de IA v√°lida durante o teste inicial
AI_TEST_MIN_CHARS = 10

# -- Configura√ß√µes de performance --
MAX_PIPELINE_CACHE_SIZE = 100   # Tamanho m√°ximo do cache do pipeline
PIPELINE_TIMEOUT_SECONDS = 10   # Timeout para opera√ß√µes do pipeline
MAX_CONCURRENT_ANALYSES = 5     # N√∫mero m√°ximo de an√°lises concorrentes

# ==============================================================================
# PAR√ÇMETROS PARA CONTEXTO DE MERCADO E DETEC√á√ÉO DE REGIME
# ==============================================================================

# Tamanho da janela (em candles) usada para calcular correla√ß√µes entre o ativo e
# √≠ndices externos (DXY, SP500, GOLD, etc.).
CORRELATION_LOOKBACK = 50

# Percentis de volatilidade usados para classificar o regime de volatilidade.
VOLATILITY_PERCENTILES = (0.35, 0.65)

# Par√¢metros para o c√°lculo dos indicadores ADX, RSI e MACD.
ADX_PERIOD = 14
RSI_PERIODS = {
    "short": 14,
    "long": 21,
}
MACD_FAST_PERIOD = 12
MACD_SLOW_PERIOD = 26
MACD_SIGNAL_PERIOD = 9

# ==============================================================================
# PAR√ÇMETROS DE SUPORTE/RESIST√äNCIA E PIVOTS
# ==============================================================================

# Fatores de pondera√ß√£o na avalia√ß√£o de for√ßa de n√≠veis de suporte e resist√™ncia.
SR_VOLUME_WEIGHT = 0.6
SR_ORDERBOOK_WEIGHT = 0.4

# Timeframes nos quais os pivots cl√°ssicos (Daily, Weekly, Monthly) ser√£o calculados.
PIVOT_TIMEFRAMES = ["daily", "weekly", "monthly"]

# ==============================================================================
# PAR√ÇMETROS DE PROFUNDIDADE DO BOOK E AN√ÅLISE DE SPREAD
# ==============================================================================

# Quantidade de n√≠veis de pre√ßo a considerar ao calcular a profundidade agregada do livro de ofertas.
ORDER_BOOK_DEPTH_LEVELS = [1, 5, 10, 25]

# Threshold em basis points (bps) para definir o que √© considerado spread "estreito".
SPREAD_TIGHT_THRESHOLD_BPS = 0.2

# Janelas (em minutos) para c√°lculo da m√©dia e volatilidade do spread.
SPREAD_AVG_WINDOWS_MIN = [60, 1440]

# ==============================================================================
# PAR√ÇMETROS DE FLUXO DE ORDENS E PARTICIPANTES
# ==============================================================================

# Janelas (em minutos) para c√°lculo do fluxo l√≠quido.
# ‚úÖ CORRETO: Valores adequados
NET_FLOW_WINDOWS_MIN = [1, 5, 15]

# Threshold (em BTC) usado para classificar ordens agressivas de acordo com seu tamanho.
AGGRESSIVE_ORDER_SIZE_THRESHOLD = 0.0

# ==============================================================================
# PAR√ÇMETROS DE DETEC√á√ÉO DE ABSOR√á√ÉO
# ==============================================================================

# Epsilon para classifica√ß√£o de absor√ß√£o por delta
ABSORCAO_DELTA_EPS = 1.0

# Modo de guarda: "off", "warn", "raise"
ABSORCAO_GUARD_MODE = "warn"

# ==============================================================================
# PAR√ÇMETROS DE DETEC√á√ÉO DE WHALES
# ==============================================================================

# Janela (em minutos) para acompanhar ordens grandes ao calcular a atividade de whales.
WHALE_DETECTION_WINDOW_MIN = 60

# N√∫mero m√≠nimo de execu√ß√µes consecutivas no mesmo pre√ßo para considerar um padr√£o de iceberg.
ICEBERG_THRESHOLD_COUNT = 3

# ==============================================================================
# PAR√ÇMETROS DE PADR√ïES E FIBONACCI
# ==============================================================================

# N√∫mero de barras (ticks ou candles) a retroceder para detectar padr√µes.
PATTERN_LOOKBACK_BARS = 200

# N√≠veis de retra√ß√£o de Fibonacci usados nas an√°lises de suporte/resist√™ncia avan√ßadas.
FIBONACCI_LEVELS = [0.236, 0.382, 0.5, 0.618, 0.786]

# ==============================================================================
# PAR√ÇMETROS DE IMPACTO DE MERCADO E SLIPPAGE
# ==============================================================================

# Tamanhos de ordem (em USD) para calcular a matriz de slippage.
SLIPPAGE_BUCKETS_USD = [1_000, 10_000, 100_000, 1_000_000]

# Pesos usados no c√°lculo do score de liquidez (0‚Äì10).
LIQUIDITY_WEIGHT_DEPTH = 0.4
LIQUIDITY_WEIGHT_SPREAD = 0.3
LIQUIDITY_WEIGHT_VOLUME = 0.3

# ==============================================================================
# PAR√ÇMETROS DE DETEC√á√ÉO DE REGIME
# ==============================================================================

# Probabilidade m√≠nima para disparar alerta de mudan√ßa de regime de mercado.
REGIME_CHANGE_THRESHOLD = 0.15

# Intervalo estimado (em horas) de dura√ß√£o esperada dos regimes.
REGIME_EXPECTED_DURATION_HRS = (2, 4)

# ==============================================================================
# PAR√ÇMETROS DE ALERTAS E ALVOS DE PRE√áO
# ==============================================================================

# Probabilidade m√≠nima para emitir alerta de teste de suporte/resist√™ncia.
ALERT_SUPPORT_PROB_THRESHOLD = 0.75

# Multiplicador do volume m√©dio que caracteriza um pico de volume para alertas.
ALERT_VOLUME_SPIKE_THRESHOLD = 3.0

# Horizontes (em minutos) para proje√ß√µes de alvo de pre√ßo.
PRICE_TARGET_HORIZONS_MIN = [5, 15, 60]

# N√≠veis de confian√ßa padr√£o para estimativas de alvos de pre√ßo.
PRICE_TARGET_CONFIDENCE_LEVELS = {
    "low": 0.5,
    "high": 0.7,
}

# ==============================================================================
# PAR√ÇMETROS DO LIQUIDITY HEATMAP
# ==============================================================================

# Tamanho da janela de trades para o heatmap
LHM_WINDOW_SIZE = 2000

# Threshold de clustering (% do pre√ßo)
LHM_CLUSTER_THRESHOLD_PCT = 0.003

# M√≠nimo de trades por cluster
LHM_MIN_TRADES_PER_CLUSTER = 5

# Intervalo de atualiza√ß√£o em ms
LHM_UPDATE_INTERVAL_MS = 100

# ==============================================================================
# PAR√ÇMETROS DE BURST DETECTION
# ==============================================================================

# Janela de tempo para detectar bursts (ms)
BURST_WINDOW_MS = 200

# Cooldown entre bursts (ms)
BURST_COOLDOWN_MS = 200

# ==============================================================================
# üîß CONFIGURA√á√ïES DE ALERTA PARA DEBUG
# ==============================================================================

# Cooldown entre alertas do mesmo tipo (em segundos)
ALERT_COOLDOWN_SEC = 30

# Configura√ß√µes espec√≠ficas para supress√£o de logs duplicados
DEDUP_FILTER_WINDOW = 1.0  # segundos para considerar logs duplicados

# ==============================================================================
# üÜï CONFIGURA√á√ïES DE QUALIDADE DE DADOS v2.1
# ==============================================================================

# Valida√ß√£o de consist√™ncia de dados
VALIDATE_DATA_CONSISTENCY = True       # ‚úÖ NOVO: Validar consist√™ncia entre m√©tricas
LOG_DISCREPANCIES = True               # ‚úÖ NOVO: Logar todas as discrep√¢ncias detectadas
AUTO_CORRECT_DISCREPANCIES = True      # ‚úÖ NOVO: Corrigir automaticamente inconsist√™ncias menores

# Limites de toler√¢ncia para valida√ß√£o
VOLUME_TOLERANCE_BTC = 0.001           # ‚úÖ NOVO: Toler√¢ncia para volumes em BTC
DELTA_TOLERANCE_BTC = 0.01             # ‚úÖ NOVO: Toler√¢ncia para deltas em BTC
PRICE_TOLERANCE_PCT = 0.001            # ‚úÖ NOVO: Toler√¢ncia para pre√ßos (0.1%)

# Contadores e estat√≠sticas
ENABLE_QUALITY_STATS = True            # ‚úÖ NOVO: Habilitar contadores de qualidade
LOG_STATS_INTERVAL_SEC = 300           # ‚úÖ NOVO: Logar estat√≠sticas a cada 5 minutos

# ==============================================================================
# FIM DO CONFIG.PY v2.1.0
# ==============================================================================
# ==============================================================================
# üÜï CONFIGURA√á√ïES DE RECONEX√ÉO E ESTABILIDADE v2.3.0
# ==============================================================================

# ===== SISTEMA DE AQUECIMENTO (WARMUP) AP√ìS RECONEX√ÉO =====
WARMUP_WINDOWS = 3                     # ‚úÖ CR√çTICO: Janelas para aguardar ap√≥s reconex√£o
TRADES_BUFFER_SIZE = 2000              # ‚úÖ CR√çTICO: Buffer de emerg√™ncia para recupera√ß√£o
MIN_TRADES_FOR_PIPELINE = 10           # ‚úÖ CR√çTICO: M√≠nimo de trades para criar pipeline

# ===== TIMEOUTS DE RECONEX√ÉO =====
HEALTH_CHECK_TIMEOUT = 90              # ‚úÖ CR√çTICO: Sem mensagens por 90s ‚Üí reconecta
HEALTH_CHECK_CRITICAL = 180            # ‚úÖ CR√çTICO: Sem dados v√°lidos por 3min ‚Üí alerta cr√≠tico

# ===== CONFIGURA√á√ïES REST API =====
REST_TIMEOUT = 5                       # ‚úÖ Timeout para requisi√ß√µes REST (segundos)
REST_MAX_RETRIES = 3                   # ‚úÖ Tentativas de retry REST
REST_RETRY_DELAY = 1.0                 # ‚úÖ Delay entre retries REST

# ===== WEBSOCKET RECONEX√ÉO AVAN√áADA =====
WS_MAX_RECONNECT_ATTEMPTS = 15         # ‚úÖ M√°ximo de tentativas de reconex√£o
WS_INITIAL_DELAY = 1.0                 # ‚úÖ Delay inicial entre reconex√µes (segundos)
WS_MAX_DELAY = 30.0                    # ‚úÖ Delay m√°ximo (reduzido de 60s)
WS_BACKOFF_FACTOR = 1.5                # ‚úÖ Fator de crescimento do delay

# ===== VALIDA√á√ÉO DE PIPELINE =====
PIPELINE_MIN_ABSOLUTE_TRADES = 3       # ‚úÖ M√≠nimo absoluto (erro fatal se menor)
PIPELINE_ALLOW_LIMITED_DATA = True     # ‚úÖ Permite processar com aviso se >= 3 trades

# ===== CORRE√á√ïES ESPEC√çFICAS PARA ORDERBOOK =====
ORDERBOOK_EMERGENCY_MODE = True        # ‚úÖ CORRIGIDO: Ativa modo emerg√™ncia (estava False)
ORDERBOOK_FALLBACK_MAX_AGE = 300       # ‚úÖ AUMENTADO: 5 minutos (estava 120s)

# ===== CONFIGURA√á√ïES DE CLEANUP =====
CLEANUP_TIMEOUT = 5.0                  # ‚úÖ Timeout para cleanup de recursos

# ===== FEATURE STORE =====
FEATURE_STORE_MAX_SIZE = 1000          # ‚úÖ M√°ximo de janelas armazenadas

# ===== PERFORMANCE =====
USE_NUMPY_VECTORIZATION = True         # ‚úÖ Usa NumPy para otimiza√ß√£o
MAX_WORKER_THREADS = 5                 # ‚úÖ Pool de threads

# ==============================================================================
# üÜï VALIDA√á√ÉO AUTOM√ÅTICA DE CONFIGURA√á√ÉO v2.3.0
# ==============================================================================

def validate_config():
    """
    Valida configura√ß√µes cr√≠ticas automaticamente.
    ‚úÖ NOVO v2.3.0
    """
    errors = []
    warnings = []
    
    # Valida WebSocket
    if WS_PING_INTERVAL < 10:
        warnings.append(
            f"‚ö†Ô∏è WS_PING_INTERVAL muito baixo ({WS_PING_INTERVAL}s). "
            f"Recomendado: >= 20s"
        )
    
    if WS_PING_TIMEOUT >= WS_PING_INTERVAL:
        errors.append(
            f"‚ùå WS_PING_TIMEOUT ({WS_PING_TIMEOUT}) deve ser menor que "
            f"WS_PING_INTERVAL ({WS_PING_INTERVAL})"
        )
    
    # Valida warmup
    if WARMUP_WINDOWS < 1:
        errors.append(
            f"‚ùå WARMUP_WINDOWS deve ser >= 1 (atual: {WARMUP_WINDOWS})"
        )
    
    if MIN_TRADES_FOR_PIPELINE < 5:
        warnings.append(
            f"‚ö†Ô∏è MIN_TRADES_FOR_PIPELINE muito baixo ({MIN_TRADES_FOR_PIPELINE}). "
            f"Recomendado: >= 10"
        )
    
    # Valida orderbook
    if ORDERBOOK_MAX_RETRIES > 5:
        warnings.append(
            f"‚ö†Ô∏è ORDERBOOK_MAX_RETRIES alto ({ORDERBOOK_MAX_RETRIES}). "
            f"Pode causar lentid√£o."
        )
    
    # Valida health check
    if HEALTH_CHECK_TIMEOUT < WS_PING_INTERVAL * 3:
        warnings.append(
            f"‚ö†Ô∏è HEALTH_CHECK_TIMEOUT ({HEALTH_CHECK_TIMEOUT}s) deve ser >= "
            f"{WS_PING_INTERVAL * 3}s (3x ping interval)"
        )
    
    # Imprime resultados
    if errors:
        print("\n‚ùå ERROS DE CONFIGURA√á√ÉO:")
        for error in errors:
            print(f"  {error}")
        raise ValueError("Configura√ß√£o inv√°lida! Corrija os erros acima.")
    
    if warnings:
        print("\n‚ö†Ô∏è AVISOS DE CONFIGURA√á√ÉO:")
        for warning in warnings:
            print(f"  {warning}")
    
    return True


# Auto-valida√ß√£o ao importar
if __name__ == "__main__":
    print("\n" + "=" * 70)
    print("üîß VALIDANDO CONFIGURA√á√ïES v2.3.0...")
    print("=" * 70)
    
    try:
        validate_config()
        print("\n‚úÖ Todas as configura√ß√µes est√£o v√°lidas!")
        
        print("\n" + "=" * 70)
        print("üìä CONFIGURA√á√ïES CR√çTICAS:")
        print("=" * 70)
        print(f"  S√≠mbolo: {SYMBOL}")
        print(f"  Janela: {WINDOW_SIZE_MINUTES} min")
        print(f"  WebSocket Ping: {WS_PING_INTERVAL}s / Timeout: {WS_PING_TIMEOUT}s")
        print(f"  Warmup: {WARMUP_WINDOWS} janelas")
        print(f"  Min Trades: {MIN_TRADES_FOR_PIPELINE}")
        print(f"  Buffer: {TRADES_BUFFER_SIZE} trades")
        print(f"  Orderbook Retries: {ORDERBOOK_MAX_RETRIES} x {ORDERBOOK_RETRY_DELAY}s")
        print(f"  Emergency Mode: {ORDERBOOK_EMERGENCY_MODE}")
        print(f"  Health Check: {HEALTH_CHECK_TIMEOUT}s / Cr√≠tico: {HEALTH_CHECK_CRITICAL}s")
        print("=" * 70 + "\n")
        
    except Exception as e:
        print(f"\n‚ùå ERRO: {e}\n")
        exit(1)

# ==============================================================================
# FIM DAS ADI√á√ïES v2.3.0
# ==============================================================================